#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

void automata(string);
bool digit(string);
bool decimal(string);
bool Scientific(string);
bool hex(string);
bool keyword(string);
bool ident(string);
bool phone(string);
void Loop();

int main()
{
    Loop();

    return 0;
}
void Loop()
{
    string myInput = "";
    int num = 0;
    cin >> num;
    cout << num << endl;
    for(int i = 1; i <= num; i++)
    {
        cin >> myInput;
        cout << i << ": ";
        automata(myInput);
    }
}

void automata(string s)
{
    if(digit(s) == 1)
    {
        cout << "Integer.\n";
    }
    else if (decimal(s) == 1)
    {
        cout << "Decimal.\n";
    }
    else if(Scientific(s) == 1)
    {
        cout << "Scientific.\n";
    }
    else if(hex(s) == 1)
    {
        cout << "Hexadecimal.\n";
    }
    else if(keyword(s) == 1)
    {
        cout << "Keyword.\n";
    }
    else if(ident(s) == 1)
    {
        cout << "identifier.\n";
    }
    else if(phone(s) == 1)
    {
        cout << "Phone.\n";
    }
    else
    {
        cout << "INVALID!\n";
    }
}

bool digit(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i <= s.length())
    {
        c = s[i];

        switch(state)
        {
        case 1:
            if(c == '-' || c == '+')
            {
                state = 2;
            }
            else if(isdigit(c))
            {
                state = 2;
            }
            else
            {
                state = 99;
            }
            break;
        case 2:
            if(isdigit(c))
            {
                state = 2;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;

        default:
            return false;
            break;
        }
        i++;
    }
    return false;
}

bool decimal(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i <= s.length())
    {
        c = s[i];

        switch(state)
        {
        case 1:
            if(c == '-' || c == '+')
            {
                state = 2;
            }
            else if(isdigit(c))
            {
                state = 2;
            }
            else
            {
                state = 99;
            }
            break;
        case 2:
            if(isdigit(c))
            {
                state = 2;
            }
            else if(c == '.')
            {
                state = 3;
            }
            else
            {
                state = 99;
            }
            break;
        case 3:
            if(isdigit(c))
            {
                state = 3;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;

        default:
            return false;
            break;

        }
        i++;
    }
    return false;
}
bool Scientific(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i <= s.length())
    {
        c = s[i];

        switch(state)
        {
        case 1:
            if(c == '-' || c == '+')
            {
                state = 2;
            }
            else if(isdigit(c))
            {
                state = 2;
            }
            else
            {
                state = 99;
            }
            break;
        case 2:
            if(isdigit(c))
            {
                state = 2;
            }
            else if(c == '.')
            {
                state = 3;
            }
            else
            {
                state = 99;
            }
            break;
        case 3:
            if(isdigit(c))
            {
                state = 4;
            }
            else
            {
                state = 99;
            }
            break;
        case 4:
            if(isdigit(c))
            {
                state = 5;
            }
            else if(c == 'E')
            {
                state = 6;
            }
            else
            {
                state = 99;
            }
            break;
        case 5:
            if(c == 'E')
            {
                state = 6;
            }
            else
            {
                state = 99;
            }
            break;
        case 6:
            if(c == '+' || c == '-')
            {
                state = 7;
            }
            else if(isdigit(c))
            {
               if((i+1) == s.length())
               {
                   return true;
               }
            }
            else
            {
                state = 99;
            }
            break;
        case 7:
            if(c < 1 || c <= 9)
            {
                state = 7;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else if(isdigit(c))
            {
                state = 7;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;

        default:
            return false;
            break;
        }
        i++;
    }
    return false;
}
bool hex(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i <= s.length())
    {
        c = s[i];
        switch(state)
        {
        case 1:
            if(c == 'A' || c <= 'F' || isdigit(c))
            {
                state = 1;
            }
            else if(c == 'H')
            {
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;

        default:
            return false;
            break;
        }

        i++;
    }
    return false;
}

bool keyword(string s)
{
    int state = 1;
    int i = 0;
    char c;

    //c = s[i];
    //c = s;
    switch(state)
    {
    case 1:
        if(s == "WHILE"|| s == "ELSE"|| s == "IF"|| s == "END")
        {
            return true;
        }
        else
        {
            state == 99;
        }

    default:
        return false;

    }
    return false;
}
bool ident(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i<=s.length())
    {
        c = s[i];
        switch(state)
        {
        case 1:
            if(isalpha(c))
            {
                state = 2;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;
        case 2:
            if(isalpha(c) || isdigit(c) || c == '_')
            {
                state = 2;
                if((i+1) == s.length())
                {
                    return true;
                }
            }
            else
            {
                state = 99;
            }
            break;
        }

        i++;
    }
    return false;
}
bool phone(string s)
{
    int state = 1;
    int i = 0;
    char c;

    while(i <= s.length())
    {
        c = s[i];

        // the second to last case is the final state
        switch(state)
        {
        case 1:
            if(c == '\(')
            {
                state = 14;
            }
            else if(isdigit(c))
            {
                state = 3;
            }
            else
            {
                state = 99;
            }

        break;
        case 2:
            if(isdigit(c))
            {
                state = 3;
            }
            else
            {
                state = 99;
            }

        break;
        case 3:
            if(isdigit(c))
            {
                state = 4;
            }
            else
            {
                state = 99;
            }

        break;
        case 4:
            if(isdigit(c))
            {
                state = 5;
            }
            else
            {
                state = 99;
            }

        break;
        case 5:
            if(c == '.' || c == '-')
            {
                state = 6;
            }
            else
            {
                state = 99;
            }

        break;
        case 6:
            if(isdigit(c))
            {
                state = 7;
            }
            else
            {
                state = 99;
            }

        break;
        case 7:
            if(isdigit(c))
            {
                state = 8;
            }
            else
            {
                state = 99;
            }

        break;
        case 8:
            if(isdigit(c))
            {
                state = 9;
            }
            else
            {
                state = 99;
            }

        break;
        case 9:
            if(c == '.' || c == '-')
            {
                state = 10;
            }
            else
            {
                state = 99;
            }

        break;
        case 10:
            if(isdigit(c))
            {
                state = 11;
            }
            else
            {
                state = 99;
            }

        break;
        case 11:
            if(isdigit(c))
            {
                state = 12;
            }
            else
            {
                state = 99;
            }

        break;
        case 12:
            if(isdigit(c))
            {
                state = 13;
            }
            else
            {
                state = 99;
            }

        break;
        case 13:
            if(isdigit(c) && (i+1) == s.length())
            {
                return 1;
            }
            else
            {
                state = 99;
            }

        break;

        case 14:
        if(isdigit(c))
            {
                state = 15;
            }
            else
            {
                state = 99;
            }
            break;
        case 15:
            if(isdigit(c))
            {
                state = 16;
            }
            else
            {
                state = -1;
            }
            break;
        case 16:
            if(isdigit(c))
            {
                state = 17;
            }
            else
            {
                state = -1;
            }
            break;
        case 17:
            if(c == ')')
            {
                state = 6;
            }
            else
            {
                state = -1;
            }
            break;

        default:
            return false;
            break;
        }
        i++;
    }
    return false;
}
